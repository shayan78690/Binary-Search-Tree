/*********************************************************

 Following is the TreeNode structure:

 class TreeNode {
     int data;
     TreeNode left;
     TreeNode right;
     BinaryTreeNode() {
         this.data = 0;
         this.left = null;
         this.right = null;
     }
     BinaryTreeNode(int data) {
         this.data = data;
         this.left = null;
         this.right = null;
     }
     BinaryTreeNode(int data, TreeNode left, TreeNode right) {
         this.data = data;
         this.left = left;
         this.right = right;
     }
 };
 ********************************************************/

public class Solution {
    static int maxBSTSize = 0;

    static class Info {
        boolean isBST;
        int size;
        int min;
        int max;

        Info(boolean isBST, int size, int min, int max) {
            this.isBST = isBST;
            this.size = size;
            this.min = min;
            this.max = max;
        }
    }

    public static int largestBST(TreeNode root) {
        maxBSTSize = 0;
        helper(root);
        return maxBSTSize;
    }

    public static Info helper(TreeNode root) {
        if (root == null) {
            return new Info(true, 0, Integer.MAX_VALUE, Integer.MIN_VALUE);
        }

        Info left = helper(root.left);
        Info right = helper(root.right);

        boolean isCurrentBST = left.isBST && right.isBST && (root.data > left.max) && (root.data < right.min);

        if (isCurrentBST) {
            int size = left.size + right.size + 1;
            int min = Math.min(root.data, left.min);
            int max = Math.max(root.data, right.max);

            maxBSTSize = Math.max(maxBSTSize, size);

            return new Info(true, size, min, max);
        } else {
            return new Info(false, 0, 0, 0);
        }
    }
}
